SELECT USER
FROM DUAL;
--==>> HR

--■■■ 팀별 실습 과제 ■■■--

-- HR 샘플 스키마 ERD 를 이용한 테이블 재구성~!!!

-- 팀별로... HR 스키마에 있는 기본 테이블(7개)
-- COUNTRIES / DEPARTMENTS / EMPLOYEES / JOBS / JOB_HISTORY / LOCATIONS / REGIONS
-- 을 똑~~~~같이 새로 구성한다.

-- 단, 생성하는 테이블의 이름은 『테이블명+팀번호』
-- ex) 1팀의 경우...
-- COUNTRIES01 / DEPARTMENTS01 / EMPLOYEES01 / JOBS01 / JOB_HISTORY01 / LOCATIONS01 / REGIONS01
-- ... 
-- 과 같이 구성한다.

-- 1. 기존 테이블의 정보 수집
-- 2. 테이블 생성(컬럼 이름, 자료형, DEFAULT 표현식, NOT NULL 등...)
--    제약조건 설정(PK, UK, FK, CK, ... NN)
-- 3. 작성 후 데이터 입력
-- 4. 제출 항목
--    20210909_02_hr_팀별실습과제_0조.sql
--    후기_0조.txt

SELECT *
FROM TAB;


-- 역할 분담
DESC COUNTRIES;   --승균
DESC DEPARTMENTS; --미화
DESC JOBS;        --효진
DESC JOB_HISTORY; --지윤
DESC REGIONS;     --현정

DESC EMPLOYEES;  -- 현정
DESC LOCATIONS;  -- 현정


-- 업무 순서
1. 각 테이블의 컬럼, 제약조건 확인
2. 확인된 자료 바탕으로 테이블 쿼리문 작성
    (테이블 생성 → 제약조건 수정 → 데이터 입력)
3. 작성된 테이블 쿼리문 취합
4. EMPLOYEES - DEPARTMENTS 테이블 간의 외래키 제약조건 추가


--------------------------------------------------------------------------------
-- [순서대로 넣기]

-- ① REGIONS
-- 테이블 생성
CREATE TABLE REGIONS04
( REGION_ID     NUMBER 
, REGION_NAME   VARCHAR2(25)    
, CONSTRAINT REGIONS04_REGION_ID_PK PRIMARY KEY(REGION_ID)
);

-- 제약조건 수정
ALTER TABLE REGIONS04
MODIFY REGION_ID CONSTRAINT REGIONS04_REGION_ID_NN NOT NULL;

-- 데이터 입력
INSERT INTO REGIONS04(REGION_ID, REGION_NAME) VALUES(1, 'Europe');
INSERT INTO REGIONS04(REGION_ID, REGION_NAME) VALUES(2, 'Americas');
INSERT INTO REGIONS04(REGION_ID, REGION_NAME) VALUES(3, 'Asia');
INSERT INTO REGIONS04(REGION_ID, REGION_NAME) VALUES(4, 'Middle East and Africa');


-- 확인
DESC REGIONS;
DESC REGIONS04;

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'REGIONS';

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'REGIONS04';

SELECT *
FROM REGIONS;

SELECT *
FROM REGIONS04;


-- ② COUNTRIES
-- 테이블 생성
CREATE TABLE COUNTRIES04
( COUNTRY_ID CHAR(2)
, COUNTRY_NAME VARCHAR(40)
, REGION_ID NUMBER
, CONSTRAINT COUNTRIES04_COUNTRY_C_ID_PK PRIMARY KEY(COUNTRY_ID)
, CONSTRAINT COUNTRIES04_COUNTRY_REG_FK FOREIGN KEY(REGION_ID) 
                                       REFERENCES REGIONS04(REGION_ID)
);

-- 제약조건 수정
ALTER TABLE COUNTRIES04
MODIFY COUNTRY_ID CONSTRAINT COUNTRIES04_COUNTRY_ID_NN NOT NULL;

-- 테이터 입력
INSERT INTO COUNTRIES04 (SELECT * FROM COUNTRIES);


-- 확인
DESC COUNTRIES;
DESC COUNTRIES04;

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'COUNTRIES';

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'COUNTRIES04';

SELECT *
FROM COUNTRIES;

SELECT *
FROM COUNTRIES04;


-- ③ LOCATIONS
-- 테이블 생성
CREATE TABLE LOCATIONS04
( LOCATION_ID       NUMBER(4)
, STREET_ADDRESS    VARCHAR2(40)
, POSTAL_CODE       VARCHAR2(12)
, CITY              VARCHAR2(30)
, STATE_PROVINCE    VARCHAR2(25)
, COUNTRY_ID        CHAR(2)
, CONSTRAINT LOCATIONS04_LOCATION_ID_PK PRIMARY KEY(LOCATION_ID)
, CONSTRAINT LOCATIONS04_COUNTRY_ID_FK FOREIGN KEY(COUNTRY_ID)
                                      REFERENCES COUNTRIES04(COUNTRY_ID)
);

-- 제약조건 수정
ALTER TABLE LOCATIONS04
MODIFY CITY CONSTRAINT LOCATIONS04_CITY_NN NOT NULL;

-- 데이터 입력
INSERT INTO LOCATIONS04 (SELECT * FROM LOCATIONS);


-- 확인
DESC LOCATIONS;
DESC LOCATIONS04;

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'LOCATIONS';

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'LOCATIONS04';

SELECT *
FROM LOCATIONS;

SELECT *
FROM LOCATIONS04;


-- ④ DEPARTMENTS
-- 테이블 생성
CREATE TABLE DEPARTMENTS04
( DEPARTMENT_ID     NUMBER(4)
, DEPARTMENT_NAME   VARCHAR2(30)       
, MANAGER_ID        NUMBER(6)   
, LOCATION_ID       NUMBER(4)
, CONSTRAINT DEPARTMENTS04_DEPT_ID_PK PRIMARY KEY(DEPARTMENT_ID)  
, CONSTRAINT DEPARTMENTS04_DEPT_LOC_FK FOREIGN KEY(LOCATION_ID)
                                      REFERENCES LOCATIONS04(LOCATION_ID)
);

-- 제약조건 수정
ALTER TABLE DEPARTMENTS04
MODIFY DEPARTMENT_NAME CONSTRAINT DEPARTMENTS04_DEPT_NAME_NN NOT NULL;

-- 데이터 입력
INSERT INTO DEPARTMENTS04 (SELECT * FROM DEPARTMENTS);


-- 확인
DESC DEPARTMENTS;
DESC DEPARTMENTS04;

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'DEPARTMENTS';

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'DEPARTMENTS04';
--==> "DEPT_MGR_FK" 제외 완료 (외래키 때문에 추가 생성 예정)

SELECT *
FROM DEPARTMENTS;

SELECT *
FROM DEPARTMENTS04;


-- ⑤ JOBS
-- 테이블 생성
CREATE TABLE JOBS04
( JOB_ID        VARCHAR2(10)
, JOB_TITLE     VARCHAR2(35)
, MIN_SALARY    NUMBER(6)
, MAX_SALARY    NUMBER(6)
, CONSTRAINT JOBS04_JOB_ID_PK PRIMARY KEY(JOB_ID)
);

-- 제약조건 수정
ALTER TABLE JOBS04
MODIFY JOB_TITLE CONSTRAINT JOBS04_JOB_TITLE_NN NOT NULL;

-- 데이터 입력
INSERT INTO JOBS04 (SELECT * FROM JOBS);


-- 확인
DESC JOBS;
DESC JOBS04;

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'JOBS';

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'JOBS04';

SELECT *
FROM JOBS;

SELECT *
FROM JOBS04;


-- ⑥ EMPLOYEES
-- 테이블 생성
CREATE TABLE EMPLOYEES04
( EMPLOYEE_ID       NUMBER(6)    --NOT NULL
, FIRST_NAME        VARCHAR2(20) 
, LAST_NAME         VARCHAR2(25) --NOT NULL
, EMAIL             VARCHAR2(25) --NOT NULL
, PHONE_NUMBER      VARCHAR2(20) 
, HIRE_DATE         DATE         --NOT NULL
, JOB_ID            VARCHAR2(10) --NOT NULL
, SALARY            NUMBER(8,2)  
, COMMISSION_PCT    NUMBER(2,2)  
, MANAGER_ID        NUMBER(6)    
, DEPARTMENT_ID     NUMBER(4)  
, CONSTRAINT EMPLOYEES04_EMPLOYEE_ID_PK PRIMARY KEY(EMPLOYEE_ID)
, CONSTRAINT EMPLOYEES04_EMAIL_UK UNIQUE(EMAIL)
, CONSTRAINT EMPLOYEES04_SALARY_CK CHECK(SALARY > 0)
, CONSTRAINT EMPLOYEES04_JOB_ID_FK FOREIGN KEY(JOB_ID)
                                   REFERENCES JOBS04(JOB_ID)
);

-- 제약조건 수정
ALTER TABLE EMPLOYEES04
MODIFY 
( HIRE_DATE CONSTRAINT EMPLOYEES04_HIRE_DATE_NN NOT NULL
, LAST_NAME CONSTRAINT EMPLOYEES04_LAST_NAME_NN NOT NULL
, EMAIL CONSTRAINT EMPLOYEES04_EMAIL_NN NOT NULL
, JOB_ID CONSTRAINT EMPLOYEES04_JOB_ID_NN NOT NULL
);

-- 데이터 입력
INSERT INTO EMPLOYEES04 (SELECT * FROM EMPLOYEES);


-- 확인
DESC EMPLOYEES;
DESC EMPLOYEES04;

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'EMPLOYEES'
ORDER BY 4, 2;

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'EMPLOYEES04'
ORDER BY 4, 2;
--==>> "EMP_DEPT_FK, EMP_MANAGER_FK" 제외 완료(외래키 문제)

SELECT *
FROM EMPLOYEES;

SELECT *
FROM EMPLOYEES04;


-- ⑦ DEPARTMENTS, EMPLOYEES 간의 외래키 설정
-- EMPLOYEES 외래키 추가
ALTER TABLE EMPLOYEES04
ADD CONSTRAINT EMPLOYEES04_DEPARTMENT_ID_FK FOREIGN KEY(DEPARTMENT_ID)
                                                REFERENCES DEPARTMENTS04(DEPARTMENT_ID);
ALTER TABLE EMPLOYEES04
ADD CONSTRAINT EMPLOYEES04_MANAGER_ID_FK FOREIGN KEY(MANAGER_ID)
                                                REFERENCES EMPLOYEES04(EMPLOYEE_ID);
                                                

-- DEPARTMENTS 외래키 추가           
ALTER TABLE DEPARTMENTS04
ADD CONSTRAINT DEPARTMENTS04_DEPT_MGR_FK FOREIGN KEY(MANAGER_ID)
                                         REFERENCES EMPLOYEES04(EMPLOYEE_ID);

-- DEPARTMENTS 확인
DESC DEPARTMENTS;
DESC DEPARTMENTS04;

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'DEPARTMENTS';

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'DEPARTMENTS04';
--==> "DEPT_MGR_FK" 제외 완료 (외래키 때문에 추가 생성 예정)

SELECT *
FROM DEPARTMENTS;

SELECT *
FROM DEPARTMENTS04;


-- EMPLOYEES 확인
DESC EMPLOYEES;
DESC EMPLOYEES04;

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'EMPLOYEES'
ORDER BY 4, 2;

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'EMPLOYEES04'
ORDER BY 4, 2;
--==>> "EMP_DEPT_FK, EMP_MANAGER_FK" 제외 완료(외래키 문제)

SELECT *
FROM EMPLOYEES;

SELECT *
FROM EMPLOYEES04;


-- ⑧ JOB_HISTORY
-- 테이블 생성

CREATE TABLE JOB_HISTORY04
( EMPLOYEE_ID     NUMBER(6)           
, START_DATE      DATE                
, END_DATE        DATE                
, JOB_ID          VARCHAR2(10)        
, DEPARTMENT_ID   NUMBER(4)
, CONSTRAINT JOB_HISTORY04_E_ID_S_DATE_PK PRIMARY KEY(EMPLOYEE_ID, START_DATE)
, CONSTRAINT JOB_HISTORY04_DATE_INTERVAL CHECK(END_DATE > START_DATE)
, CONSTRAINT JOB_HISTORY04_JOB_ID_FK FOREIGN KEY(JOB_ID)
                                     REFERENCES JOBS04(JOB_ID)
, CONSTRAINT JOB_HISTORY04_E_ID_FK FOREIGN KEY(EMPLOYEE_ID)
                                   REFERENCES EMPLOYEES04(EMPLOYEE_ID)
, CONSTRAINT JOB_HISTORY04_DEPARTMENT_ID_FK FOREIGN KEY(DEPARTMENT_ID)
                                           REFERENCES DEPARTMENTS04(DEPARTMENT_ID)
);
--> EMPLOYEE_ID, START_DATE 가 포함된 제약조건은
--  제약조건 이름의 길이 제한(30자) 때문에 
--  각각 E_ID 와 S_DATE 로 축약


-- 제약조건 수정
ALTER TABLE JOB_HISTORY04
MODIFY
( EMPLOYEE_ID CONSTRAINT JOB_HISTORY04_EMPLOYEE_ID_NN NOT NULL
, START_DATE CONSTRAINT JOB_HISTORY04_START_DATE_NN NOT NULL
, END_DATE CONSTRAINT JOB_HISTORY04_END_DATE_NN NOT NULL
, JOB_ID CONSTRAINT JOB_HISTORY04_JOB_ID_NN NOT NULL
);


-- 데이터 입력
INSERT INTO JOB_HISTORY04 (SELECT * FROM JOB_HISTORY);


-- 확인
DESC JOB_HISTORY;
DESC JOB_HISTORY04;

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'JOB_HISTORY'
ORDER BY 4, 5;

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'JOB_HISTORY04'
ORDER BY 4, 5;

SELECT *
FROM JOB_HISTORY;

SELECT *
FROM JOB_HISTORY04;


