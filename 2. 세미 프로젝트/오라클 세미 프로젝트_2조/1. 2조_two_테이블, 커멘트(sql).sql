SELECT USER
FROM DUAL;
--==>>TWO


--○ 관리자 테이블 TBL_ADMIN 생성
CREATE TABLE TBL_ADMIN
( ADMIN_ID  VARCHAR2(20)                                            --관리자 아이디(PK)
, PW        VARCHAR2(20)    CONSTRAINT ADMIN_PW_NN NOT NULL         --관리자 패스워드(NN)
, NAME      VARCHAR2(20)    CONSTRAINT ADMIN_NAME_NN NOT NULL       --관리자 이름
, CONSTRAINT ADMIN_ADMIN_ID_PK PRIMARY KEY(ADMIN_ID)
);


--○ 교수 테이블 TBL_PROFESSOR 생성 
CREATE TABLE TBL_PROFESSOR
( PRO_ID    VARCHAR2(20)
 ,PW        VARCHAR2(20) 
 ,NAME      VARCHAR2(20) CONSTRAINT PROFESSOR_NAME_NN NOT NULL 
 ,FSSN      CHAR(6) CONSTRAINT PROFESSOR_FSSN_NN NOT NULL
 ,BSSN      CHAR(7) CONSTRAINT PROFESSOR_BSSN_NN NOT NULL 
 ,SIGNDATE  DATE DEFAULT SYSDATE
 ,CONSTRAINT PROFESSOR_PRO_ID_PK PRIMARY KEY(PRO_ID)
);


--○ 학생 테이블 TBL_STUDENT 생성
CREATE TABLE TBL_STUDENT
( STU_ID      VARCHAR2(20)
, PW          VARCHAR2(20)    
, NAME        VARCHAR2(20)     CONSTRAINT STUDENT_NAME_NN NOT NULL
, FSSN        CHAR(6)          CONSTRAINT STUDENT_FSSN_NN NOT NULL
, BSSN        CHAR(7)          CONSTRAINT STUDENT_BSSN_NN NOT NULL
, SIGNDATE    DATE             DEFAULT SYSDATE
, CONSTRAINT STUDENT_STU_ID_PK PRIMARY KEY (STU_ID)
);


--○ 강의실 테이블 TBL_CLASSROOM 생성
CREATE TABLE TBL_CLASSROOM
( CLASS_CODE  NUMBER      
, NAME        VARCHAR2(20) CONSTRAINT CLASSROOM_NAME_NN NOT NULL
, CAPACITY    VARCHAR2(50)
, CONSTRAINT CLASSROOM_CLASS_CODE_PK PRIMARY KEY(CLASS_CODE)
);


--○ 배점 테이블 TBL_ALLOT 생성
CREATE TABLE TBL_ALLOT
( ALLOT_CODE    NUMBER       
, ATTEND        NUMBER(3) DEFAULT 0
, PRACTICE      NUMBER(3) DEFAULT 0
, WRITTEN       NUMBER(3) DEFAULT 0
, CONSTRAINT ALLOT_ALLOT_CODE_PK PRIMARY KEY(ALLOT_CODE)
, CONSTRAINT ALLOT_TOTAL_CK CHECK((ATTEND + PRACTICE + WRITTEN) = 100)
);


--○ 과목 테이블 TBL_SUBJECTS 생성
CREATE TABLE TBL_SUBJECTS
( SUB_CODE  NUMBER                                                  --과목코드(PK)
, NAME      VARCHAR2(20)    CONSTRAINT SUBJECTS_NAME_NN NOT NULL    --과목명(NN)
, BOOK      VARCHAR2(50)                                            --교재명
, CONSTRAINT SUBJECTS_SUB_CODE_PK PRIMARY KEY(SUB_CODE)
);


--○ 과정 테이블 TBL_COURSE 생성
CREATE TABLE TBL_COURSE
( COUR_CODE     VARCHAR2(30)
, CLASS_CODE    NUMBER
, STARTDATE     DATE
, ENDDATE       DATE
, LIMIT         NUMBER
, CONSTRAINT COURSE_COUR_CODE_PK PRIMARY KEY(COUR_CODE)
, CONSTRAINT COURSE_CLASS_CODE_FK FOREIGN KEY(CLASS_CODE)
             REFERENCES TBL_CLASSROOM (CLASS_CODE)
, CONSTRAINT COURSE_DATE_INTERVAL CHECK (STARTDATE < ENDDATE)
);


--○ 수강신청 테이블 TBL_REGIST 생성
CREATE TABLE TBL_REGIST
( REG_CODE      NUMBER
 ,STU_ID        VARCHAR2(20)
 ,COUR_CODE     VARCHAR2(30)
 ,REG_DATE      DATE DEFAULT SYSDATE
 ,CONSTRAINT REGIST_REG_CODE_PK PRIMARY KEY(REG_CODE)
 ,CONSTRAINT REGIST_STU_ID_FK FOREIGN KEY(STU_ID)
                        REFERENCES TBL_STUDENT(STU_ID)
 ,CONSTRAINT REGIST_COUR_CODE_FK FOREIGN KEY(COUR_CODE)
                        REFERENCES TBL_COURSE(COUR_CODE)                        
);


--○ 중도하차여부 테이블 TBL_QUIT
CREATE TABLE TBL_QUIT
( QUIT_CODE     NUMBER
, REG_CODE      NUMBER
, REASON        VARCHAR2(100)
, QUIT_DATE     DATE DEFAULT SYSDATE
, CONSTRAINT QUIT_QUIT_CODE_PK PRIMARY KEY(QUIT_CODE)
, CONSTRAINT QUIT_REG_CODE_FK FOREIGN KEY(REG_CODE)
                        REFERENCES TBL_REGIST(REG_CODE)
, CONSTRAINT QUIT_REG_CODE_UK UNIQUE (REG_CODE)                         
);


--○ 개설과목 테이블 TBL_OPSUBJECT 생성
CREATE TABLE TBL_OPSUBJECT
( OPSUB_CODE    NUMBER
, COUR_CODE     VARCHAR2(30)
, SUB_CODE      NUMBER
, PRO_ID        VARCHAR2(20)
, ALLOT_CODE    NUMBER
, STARTDATE     DATE
, ENDDATE       DATE
, CONSTRAINT OPSUBJECT_OPSUB_CODE_PK PRIMARY KEY(OPSUB_CODE)
, CONSTRAINT OPSUBJECT_COUR_CODE_FK FOREIGN KEY(COUR_CODE)
                        REFERENCES TBL_COURSE(COUR_CODE) 
, CONSTRAINT OPSUBJECT_PRO_ID_FK FOREIGN KEY(PRO_ID)
                        REFERENCES TBL_PROFESSOR(PRO_ID) 
, CONSTRAINT OPSUBJECT_ALLOT_CODE_FK FOREIGN KEY(ALLOT_CODE)
                        REFERENCES TBL_ALLOT(ALLOT_CODE) 
, CONSTRAINT OPSUBJECT_DATE_INTERVAL CHECK (STARTDATE < ENDDATE)
);


--○ 성적 테이블 TBL_GRADE 생성
CREATE TABLE TBL_GRADE
( GRADE_CODE    NUMBER
, OPSUB_CODE    NUMBER
, REG_CODE      NUMBER
, ATTEND        NUMBER(3)   DEFAULT 0 
, PRACTICE      NUMBER(3)   DEFAULT 0 
, WRITTEN       NUMBER(3)   DEFAULT 0
, CONSTRAINT GRADE_GRADE_CODE_PK PRIMARY KEY(GRADE_CODE)
, CONSTRAINT GRADE_OPSUB_CODE_FK FOREIGN KEY(OPSUB_CODE)
             REFERENCES TBL_OPSUBJECT (OPSUB_CODE)
, CONSTRAINT GRADE_REG_CODE_FK FOREIGN KEY(REG_CODE)
             REFERENCES TBL_REGIST(REG_CODE)
, CONSTRAINT GRADE_ATTEND_CK CHECK (ATTEND <= 100 AND ATTEND >=0)
, CONSTRAINT GRADE_PRACTICE_CK CHECK (PRACTICE <= 100 AND PRACTICE >=0)
, CONSTRAINT GRADE_WRITTEN_CK CHECK (WRITTEN <= 100 AND WRITTEN >=0)             
);

--==============================================================================

--각 테이블, 컬럼에 커멘트 입력
COMMENT ON TABLE TBL_ADMIN IS '관리자';
COMMENT ON COLUMN TBL_ADMIN.ADMIN_ID IS '관리자 ID';
COMMENT ON COLUMN TBL_ADMIN.PW IS '관리자 PW';
COMMENT ON COLUMN TBL_ADMIN.NAME IS '관리자 NAME';

COMMENT ON TABLE TBL_PROFESSOR IS '교수';
COMMENT ON COLUMN TBL_PROFESSOR.PRO_ID IS '교수 ID';
COMMENT ON COLUMN TBL_PROFESSOR.PW IS '교수 PW';
COMMENT ON COLUMN TBL_PROFESSOR.NAME IS '교수 이름';
COMMENT ON COLUMN TBL_PROFESSOR.FSSN IS '주민번호 앞자리';
COMMENT ON COLUMN TBL_PROFESSOR.BSSN IS '주민번호 뒷자리';
COMMENT ON COLUMN TBL_PROFESSOR.SIGNDATE IS '가입일자';

COMMENT ON TABLE TBL_STUDENT  IS '학생';
COMMENT ON COLUMN TBL_STUDENT.STU_ID IS '학생 ID';
COMMENT ON COLUMN TBL_STUDENT.PW IS '학생 PW';
COMMENT ON COLUMN TBL_STUDENT.NAME IS '교수 이름';
COMMENT ON COLUMN TBL_STUDENT.FSSN IS '주민번호 앞자리';
COMMENT ON COLUMN TBL_STUDENT.BSSN IS '주민번호 뒷자리';
COMMENT ON COLUMN TBL_STUDENT.SIGNDATE IS '가입일자';

COMMENT ON TABLE TBL_CLASSROOM IS '강의실';
COMMENT ON COLUMN TBL_CLASSROOM.CLASS_CODE IS '강의실 번호';
COMMENT ON COLUMN TBL_CLASSROOM.NAME IS '강의실 이름';
COMMENT ON COLUMN TBL_CLASSROOM.CAPACITY IS '강의실 정보';

COMMENT ON TABLE TBL_ALLOT IS '배점';
COMMENT ON COLUMN TBL_ALLOT.ALLOT_CODE IS '배점코드';
COMMENT ON COLUMN TBL_ALLOT.ATTEND IS '출결배점';
COMMENT ON COLUMN TBL_ALLOT.PRACTICE IS '실기배점';
COMMENT ON COLUMN TBL_ALLOT.WRITTEN IS '필기배점';

COMMENT ON TABLE TBL_SUBJECTS IS '과목';
COMMENT ON COLUMN TBL_SUBJECTS.SUB_CODE IS '과목번호';
COMMENT ON COLUMN TBL_SUBJECTS.NAME IS '과목명';

COMMENT ON TABLE TBL_COURSE IS '과정';
COMMENT ON COLUMN TBL_COURSE.COUR_CODE IS '과정이름';
COMMENT ON COLUMN TBL_COURSE.CLASS_CODE IS '강의실 번호';
COMMENT ON COLUMN TBL_COURSE.STARTDATE IS '과정 시작일';
COMMENT ON COLUMN TBL_COURSE.ENDDATE IS '과정 종료일';
COMMENT ON COLUMN TBL_COURSE.LIMIT IS '수강정원';

COMMENT ON TABLE TBL_REGIST IS '수강신청';
COMMENT ON COLUMN TBL_REGIST.REG_CODE IS '수강신청 코드';
COMMENT ON COLUMN TBL_REGIST.STU_ID IS '학생 ID';
COMMENT ON COLUMN TBL_REGIST.COUR_CODE IS '과정 이름';
COMMENT ON COLUMN TBL_REGIST.REG_DATE IS '수강신청 날짜';

COMMENT ON TABLE TBL_QUIT IS '중도하차여부';
COMMENT ON COLUMN TBL_QUIT.QUIT_CODE IS '중도하차 코드';
COMMENT ON COLUMN TBL_QUIT.REG_CODE IS '수강신청 코드';
COMMENT ON COLUMN TBL_QUIT.REASON IS '하차 이유';
COMMENT ON COLUMN TBL_QUIT.QUIT_DATE IS '하차 일자';

COMMENT ON TABLE TBL_OPSUBJECT IS '개설과목';
COMMENT ON COLUMN TBL_OPSUBJECT.OPSUB_CODE IS '개설과목코드';
COMMENT ON COLUMN TBL_OPSUBJECT.COUR_CODE IS '과정이름';
COMMENT ON COLUMN TBL_OPSUBJECT.SUB_CODE IS '과목번호';
COMMENT ON COLUMN TBL_OPSUBJECT.PRO_ID  IS '교수 ID';
COMMENT ON COLUMN TBL_OPSUBJECT.ALLOT_CODE IS '배점 코드';
COMMENT ON COLUMN TBL_OPSUBJECT.STARTDATE IS '과목 시작일';
COMMENT ON COLUMN TBL_OPSUBJECT.ENDDATE IS '과목 종료일';

COMMENT ON TABLE TBL_GRADE IS '성적';
COMMENT ON COLUMN TBL_GRADE.GRADE_CODE IS '성적코드';
COMMENT ON COLUMN TBL_GRADE.OPSUB_CODE IS '개설과목코드';
COMMENT ON COLUMN TBL_GRADE.REG_CODE IS '수강신청코드';
COMMENT ON COLUMN TBL_GRADE.ATTEND IS '출결점수';
COMMENT ON COLUMN TBL_GRADE.PRACTICE IS '실기점수';
COMMENT ON COLUMN TBL_GRADE.WRITTEN IS '필기점수';



