
《팀원 후기》

● 김진령
상대적으로 자바보다 오라클이 더 이해가 잘 되었기때문에 이번 세미프로젝트를 수행하는 일이 그렇게까지 어려울거라는 생각을 하지 못했습니다.
처음으로 ERD 다이어그램을 만들고 논리적인 설계부터 물리적인 설계까지 하는 과정에서 DB 설계가 결코 만만치않은 일이라는 것을 깨달았습니다.
어떤 테이블에 어떤 컬럼을 넣을지도 문제였고, 테이블을 분리하는 과정에서 여러 의견이 나와 팀원끼리 논의할 때 같은 부분을 다른 의미로 이해하는 경우가 생기기도 했습니다.
하지만 팀원들과 끊임없이 소통하면서 서로 도움을 주고받아 해결할 수 있었던 점이 감사했습니다.
컨펌을 받기 전에는 단순히 관리자, 학생, 교수자가 각각의 테이블에 접근하게 하자는 얘기까지만 나눴는데, 컨펌을 받고 각각 레이아웃을 나눠 해결하야 하는 것을 깨달았습니다.
그 후에 생기는 여러 문제들도 레이아웃을 그리면서 접근해서 해결한 경우가 많아 요구사항에 대한 접근방식에 대해 알게되었습니다.
또한 프로젝트를 진행할수록 데이터베이스가 잘 짜여있지 않아 이후에 발생하는 모든 문제들은 데이터베이스부터 다시 시작해야한다는 강사님의 말씀이 이해되었습니다.
생각보다 훨씬 높은 난이도에 난감한 상황도 많았지만 팀원들과 모여 계속 소통하고 의견을 제시하면서 방향이 명확해졌고, 점점 서로 의사소통하는 데 있어서 능숙해짐을 느꼈습니다.
혼자서는 절대 해내지 못했을 두 번째 프로젝트를 팀원들과 함께 해결하면서 프로젝트 진행에 대한 막연한 두려움을 덜어낼 수 있었습니다.
더 공부하고 배워서 저 역시 다른 팀원들에게 좋은 영향을 끼칠 수 있도록 노력해야겠다는 생각을 했습니다.


● 박효빈
요구사항을 보고 ERD를 만들고 테이블을 구성하고 요구사항이 수행될 수 있는 쿼리문을 작성하는 팀플을 진행하였다. 
우선 요구사항분석서를 분석하여 필요한 테이블을 생각하는 과정과 정규화하는 과정에서부터 어려움이 있었다. 
어떻게 더 효율적으로 테이블을 사용할 것 인가에 대한 고민과 각 테이블의 관계에 대한 고민을 다 함께 의견을 
공유하고 예시를 생각해보며 해결했다. 그 후 테이블 설계는 이전 프로젝트를 통해 깨달은 것과 ERD를 토대로 
쉽게 진행되었다. 하지만 요구사항에 맞는 쿼리문들을 작성할 때 생각했던 것만큼 쉽게 진행되지 않는다는 점을 
알았다. 단순하게 테이블에 있는 것에서 출력하면 된다는 생각이 직접 쿼리문을 작성해 보니 틀렸다는 것을 
알 수 있었다. 다양한 PL/SQL도 필요했고 JOIN 등 다양한 방법 통해 해결해야 했다. 데이터베이스에 대한 
요구사항이 잘 완성되어있지 않다면 나중에 발생하는 문제를 해결하는데 어려움이 있다고 했는데 진짜 
그 문제가 심각할 것을 깨닫는 팀플이었다. 데이터베이스부분이 얼마나 완성도가 높은가는 중요한 사안인 것 같다.


● 손범석
1. 
DB 설계를 할 때 어떻게 설계해야 할 지 생각하다가 일단 나만의
우선순위를 생각해봤다.
  ① 요구분석서를 보고나서 어떤 테이블이 필요할 지 구성
  ② 테이블의 명칭을 보고나서 이 테이블에는 어떤 컬럼, 타입이 들어가는게
     좋을지 고려
  ③ ②의 과정이 끝나면 테이블과 컬럼을 이용하여 각각의 관계 및 제약조건을 설정
방식만 정해져있다면 DB설계에 많은 도움이 된다는것을 배웠다.
하지만 제약조건을 설정할 때 컬럼들의 이름을 똑같이 해야하다 보니
테이블마다 컬럼들이 부자연스러운 느낌이 강했다.
이건 나중에 고려해봐야 할 사항인거 같다.
2. 
요구사항을 보면서 트리거와 프로시저를 고려할 때 
트리거와 프로시저는 꽤나 비슷한 작동을 취하는것을 알게되었다.
트리거는 자동으로 처리해주는 문법에 가깝고, 프로시저는 수동이면서
함수에 가까운 느낌..?
3. 
실제로 물리적 설계에서 외래키를 설정할 때는 먼저 테이블설계하고서
ALTER ~ ADD 구문을 추가해주는게 작업할 때 편하다.
4.
DB 설계 논리적 설계에서 컬럼명을 정할 때 『테이블명_컬럼명』으로 해야
나중에 구분하기가 편하다. 하지만 개인적으로 DB에 익숙하질않아서 그런지
굉장히 많이 헷갈리다. 컬럼명을 정할때는 구분하기쉽게 해야 할 것 같다.
5.
이건 모든 IT분야 공통이겠지만 DB를 한 곳의 SQL파일에만 작성하니 굉장히 헷갈리고
찾는데가 한 세월이다. DB 설계 할 때도 나눠서 해야 좋을거 같다.
6. FUNCTION은 단어 그대로 기능이 필요할 때 사용하는게 좋고,
PROCEDURE는 이중으로 일을 처리할 때 좋고,
TRIGGER는 PROCEDURE처럼 이중으로 일을 처리하는거 같지만, 약간 다르게
이벤트를 발생시키는 느낌이 강했다. 문법에 대한 경험이 적다보니
아직까진 이런 표현밖에 못하겠다.


● 이윤서
요구 분석서를 보고 분석하는 것이 생각보다 까다로웠다. 그래프화 되어 있지 않은 문장을 머릿속에서 그려가며 
구조를 짜는 것에 어려움이 있었다. 완성된 최종본을 분석하기가 더 쉬울 거라는 생각을 했다. 분석한 것을 
ERD 다이어그램으로 그릴 땐 요구사항에 맞게 테이블 구조를 생각하고 테이블 간의 관계를 생각하고 설정하는 
것이 생각처럼 쉽지 않았지만, 팀원들과 회의를 통해 잘 완성할 수 있었다. 물리적으로 테이블 만들기 시작하고 
필요한 프로시저나 트리거 등을 만들 때 해당 요구사항에 필요한 것이 맞는가에 대한 어려움이 있었으나 
요구사항과 짜놓은 ERD를 참고하여 팀원들과 고민하여 올바른 구문들을 짤 수 있었다. 오라클 사용자 계정 
생성부터 테이블 작성, 제약조건, 프로시저 등을 만들면서 다시 한번 개념들을 살피고, 작성법을 익히는 복습을 
할 수 있어서 좋았다. 테스트를 위해 임의로 데이터를 넣기 위해 작성할 때 생각보다 많은 데이터 때문에 헷갈릴 
때도 있었으나 팀원들 간의 이중 체크로 실수를 피할 수 있었다. 코트를 짜면서 막히는 부분이 있거나 의문점이 
들 때 팀원들 간의 회의를 통해서 극복할 수 있었고 이로 인해 팀원 간에 소통이 중요하다는 것을 느꼈다. 
두 번째로 하는 세미 프로젝트였기에 처음 프로젝트보다는 어렵지 않게 진행할 수 있었으나 ERD 사이트 조작법이나,
어떤 구문을 사용하면 좋을지에 대한 활용도가 아직 미숙하다는 것을 느꼈고, 프로젝트가 끝난 후에도 꾸준히 
복습해야겠다고 느꼈다. 또한, 좋은 팀원들을 만나 문제없이 팀 프로젝트를 마칠 수 있었고, 팀 프로젝트를 
하면서 팀원들 간의 소통이 중요하다는 것을 배웠다. 

● 이중호
저희는 요구사항분석서 분석부터 어려워했습니다. 요구사항 분석서에서 무엇을 원하는지 정확히 파악하는데 시간이 걸렸습니다. 
요구분석을 마치고, ERD를 그리는 것도 어려워했습니다. 아마 팀원들과 가장 활발한 소통이 있었던 부분인 것 같습니다. 
ERD는 소통으로 집단지성을 이끌어내 잘 해결해 나갔습니다. 코드레벨에서도 저는 제약조건이 약했습니다. 
그때 백신부작용 때문에 수업에 불참하여 내용을 자세히 몰랐지만, 프로젝트를 위해 이것저것 알아보고, 팀원들이 짜는 것을 보고 잘 해결했습니다.
저는 DROPOUT 테이블에 INSERT 시, 중도탈락일 보다 종료일이 늦은 과목에 대해서는 그 학생의 레코드가 
성적테이블에서 삭제될 수 있도록 하는 트리거를 작성 시 많은 어려움이 있었습니다. 하지만 그 부분은 다른 팀원분께서 수정해주어서 해결되었습니다. 
수정해주신 부분은 나중에 앞에 시작일과 종료일을 함수로 나누고 WHERE에 그 함수와 중도포기날을 비교하여 해결되었습니다.
TRIGGER와 PROCEDURE를 좀 헷갈렸지만 이번 프로젝트를 진행하며 헷갈리는 부분을 최소화했습니다.
그리고 데이터입력 부분은 정말 신중하게 하여 오타를 최소화했습니다. 하지만 데이터 입력부분에서 마지막에 다른 팀원의 도움이 있어 
그 부분과 제가 데이터 입력한 부분을 취합하며, 중간에 꼬여 데이터가 이상하게 입력되었습니다. 이번 데이터입력을 보고 코드를 취합할 때가 
은근히 많이 실수할 수 있는 부분이라고 느껴 다음에는 좀 더 주의할 것 같습니다.
저는 아직 데이터베이스에 대해 경험도 많이 없고, 문법에 대한 이해도 부족한 편이라 최종 프로젝트 전에 좀 더 공부하여 
그때는 다른 팀원들에게 많은 도움이 되게 노력을 해야겠다고 생각했습니다.


● 최수지
이번 프로젝트를 진행하면서 가장 먼저 맞닥뜨린 어려움은 요구분석서를 보고 테이블ERD를 설계하는 과정에서 
정규화과정에 따라 테이블을 쪼개는 것이었다. 이론적으로 배우고 실습도 했지만, 실제와 비슷하게 요구분석을
자력으로 해석하여 테이블구조를 짜는 게 생각보다 힘들었다. 또한 테이블을 생성하고 나서도 
각각의 테이블들 간 어떤 쿼리문들이 유기적으로 일어나야하는지 생각하고, 그것들을
함수, 프로시저, 트리거, 뷰 등으로 구성하는 과정 또한 오래걸리고 순탄치 않았다. 특히 팀원 모두 아직 PLSQL을 다루는 것에
익숙하지 않아서 쿼리문을 구성하는 시간도 오래걸리고 오류 또한 잦았다. 테스트 과정에서 그런 오류들을 발견하면
자바와는 다르게 데이터를 다시 원상복구하는 것이 까다롭기 때문에 데이터베이스를 다룰 때는 꼭 처음부터 꼼꼼히
하나하나 잘 쌓아나가면서 진행해야 함을 체감했다. 많은 어려움들이 있었지만 좋은 팀원들을 만나 원활히 소통할 수 있었고
문제 상황에 적극적으로 임해주는 팀원들 덕분에 프로젝트를 무사히 마칠 수 있었던 것 같다.
자바 프로젝트를 할 때부터 느낀 부분이지만, 소통이 정말 중요한 것 같다. 개발자로 일하게 된다면 
코드를 잘짜는 것도 물론 중요하지만,내가 생각하고, 이해하고 있는 것들을 다른 사람에게 정확히 전달할 수 있는 능력도 
필수적이라는 것을 오라클 세미 프로젝트를 통해 다시 한 번 느낄 수 있었다. 

